version: "3"

x-defaults: &defaults
  networks:
    - ${NETWORK_CONTAINER}
  env_file:
      - ./.env
      
services:
  sonarqube:
    image: ${SONARQUBE}
    container_name: sonarqube
    restart: always
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: ${SONAR_URL}
      SONAR_JDBC_USERNAME: ${SONAR_USER}
      SONAR_JDBC_PASSWORD: ${SONAR_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - ${SONAR_LOCAL_PORT}:${SONAR_DOCKER_PORT}
    <<: *defaults

     
  db:
    image: ${PG_IMG}
    container_name: postgresql
    restart: always
    environment:
      POSTGRES_USER: ${SONAR_USER}
      POSTGRES_PASSWORD: ${SONAR_USER}
      POSTGRES_DB: ${SONAR_DB}
    ports:
    - ${PG_LOCAL_PORT}:${PG_DOCKER_PORT}
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    <<: *defaults

  
  # mentoratdb:
  #   image: ${PG_IMG}
  #   container_name: mentoratdb
  #   restart: always
  #   ports:
  #     - ${PG_LOCAL_PORT}:${PG_DOCKER_PORT}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./apps/db/:/docker-entrypoint-initdb.d  
  #   environment:
  #     - POSTGRES_DB=${PG_DB}
  #     - POSTGRES_USER=${PG_USER}
  #     - POSTGRES_PASSWORD=${PG_PASSWORD}
  #   <<: *defaults


  adminer:
    image: ${ADMINER_IMG}
    depends_on:
      # - mentoratdb
      - db
    ports:
      - ${ADMINER_LOCAL_PORT}:${ADMINER_DOCKER_PORT}
    <<: *defaults

networks:
  app_network:
    external: true

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  # postgres_data:
  # postgresonar_data:
  postgresql_data:


