version: "3"

x-common-variable: &common-varibles 
x-defaults:
  &defaults
  networks:
    - app_network
  env_file:
      - ./.env
# put the common variable here

services:

  web:
    <<: *defaults
    container_name: web
    build:
      # context: .
      dockerfile: ./apps/web/Dockerfile
    restart: always
    volumes: 
      - ./apps/web:/app/apps/web
      - /app/apps/web/node_modules
      - /app/.next

    ports:
      - $WEB_lOCAL_PORT:$WEB_DOCKER_PORT 

  api:
    <<: *defaults
    container_name: api
    build:
      # context: .
      dockerfile: ./apps/api/Dockerfile
    depends_on:
      - postgres
      - redis
  # adapter Ã§a en fonction de ton environnement
    volumes:
<<<<<<< HEAD
      - /app/node_modules
      - /api:/app
    
=======
      - ./apps/api:/app/apps/api
      - /app/apps/apinode_modules
>>>>>>> 31c5af65198c2bcb91240714889a9f721b25c114
    restart: always
    ports:
      - $API_LOCAL_PORT:$API_DOCKER_PORT

    
  ngnix : 
    <<: *defaults
    container_name: ngnix
    build: 
      dockerfile: ./apps/ngnix/Dockerfile
      context: ./apps/nginx    
    ports:
      - $NGNIX_LOCAL_PORT:$NGNIX_DOCKER_PORT
    depends_on: 
      - web
      - api
      - postgres
    restart: always
   
    
  redis: 
    <<: *defaults
    image: redis:7.2.4-alpine
    volumes: 
      - ./apps/data/redis:/data
    ports: 
      - $REDIS_LOCAL_PORT:$REDIS_DOCKER_PORT
   
    # - default

  postgres:
    <<: *defaults
    image: postgres:alpine
    container_name: postgres
    restart: always
    ports:
      - $PG_LOCAL_PORT:$PG_DOCKER_PORT
    # env_file:
      #
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=$PG_DB 
      - POSTGRES_USER=$PG_USER
      - POSTGRES_PASSWORD=$PG_PASSWORD
 

  

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
volumes:
  postgres_data:

networks:
  app_network:
    external: true
    # driver: bridge



